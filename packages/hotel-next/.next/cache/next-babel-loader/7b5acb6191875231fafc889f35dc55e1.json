{"ast":null,"code":"import \"antd/lib/config-provider/style/css\";\nimport _ConfigProvider from \"antd/lib/config-provider\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\tiago\\\\Downloads\\\\templates_teste\\\\isoadmin-330\\\\Isomorphic - React Redux Admin Dashboard\\\\isomorphic\\\\packages\\\\hotel-next\\\\pages\\\\_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport App from 'next/app';\nimport 'antd/dist/antd.min.css';\nimport 'react-image-gallery/styles/css/image-gallery.css';\nimport { IntlProvider } from 'react-intl';\nimport { ThemeProvider } from 'styled-components';\nimport themes from '../themes/themes';\nimport AppLocale from '../translations/index';\nimport GlobalStyles from '@hotel/assets/style/Global.style';\nimport Layout from '../container/Layout/Layout';\nimport AuthProvider from '../context/AuthProvider';\nimport { SearchProvider } from '../context/SearchProvider';\nimport { withData } from '../helpers/restriction';\nconst currentAppLocale = AppLocale['en'];\n\nclass HotelCustomApp extends App {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleOnChangeTheme\", themeName => {\n      this.setState({\n        currentSelectedTheme: themeName\n      });\n    });\n\n    _defineProperty(this, \"handleOnChangeLanguage\", language => {\n      const selectedLanguage = AppLocale[language.locale];\n      this.setState({\n        currentSelectedLanguage: selectedLanguage\n      });\n    });\n\n    this.state = {\n      currentSelectedTheme: 'defaultTheme',\n      currentSelectedLanguage: currentAppLocale\n    };\n  }\n\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n\n    const {\n      query,\n      pathname\n    } = ctx;\n    const {\n      user,\n      isLoggedIn\n    } = withData(ctx);\n    return {\n      pageProps,\n      query,\n      pathname,\n      user,\n      isLoggedIn\n    };\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      query,\n      user,\n      isLoggedIn\n    } = this.props;\n    const {\n      currentSelectedTheme,\n      currentSelectedLanguage\n    } = this.state;\n    return __jsx(AuthProvider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, __jsx(SearchProvider, {\n      query: query,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, __jsx(Layout, {\n      user: user,\n      isLoggedIn: isLoggedIn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, __jsx(_ConfigProvider, {\n      locale: currentSelectedLanguage.antd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, __jsx(IntlProvider, {\n      locale: currentSelectedLanguage.locale,\n      messages: currentSelectedLanguage.messages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, __jsx(ThemeProvider, {\n      theme: themes[currentSelectedTheme],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, __jsx(React.Fragment, null, __jsx(GlobalStyles, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), __jsx(Component, _extends({\n      isLoggedIn: isLoggedIn\n    }, pageProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })))))))));\n  }\n\n}\n\nexport default HotelCustomApp;","map":{"version":3,"sources":["C:/Users/tiago/Downloads/templates_teste/isoadmin-330/Isomorphic - React Redux Admin Dashboard/isomorphic/packages/hotel-next/pages/_app.js"],"names":["App","IntlProvider","ThemeProvider","themes","AppLocale","GlobalStyles","Layout","AuthProvider","SearchProvider","withData","currentAppLocale","HotelCustomApp","constructor","props","themeName","setState","currentSelectedTheme","language","selectedLanguage","locale","currentSelectedLanguage","state","getInitialProps","Component","ctx","pageProps","query","pathname","user","isLoggedIn","render","antd","messages"],"mappings":"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","sourcesContent":["import App from 'next/app';\nimport { ConfigProvider } from 'antd';\nimport 'antd/dist/antd.min.css';\nimport 'react-image-gallery/styles/css/image-gallery.css';\nimport { IntlProvider } from 'react-intl';\nimport { ThemeProvider } from 'styled-components';\nimport themes from '../themes/themes';\nimport AppLocale from '../translations/index';\nimport GlobalStyles from '@hotel/assets/style/Global.style';\nimport Layout from '../container/Layout/Layout';\nimport AuthProvider from '../context/AuthProvider';\nimport { SearchProvider } from '../context/SearchProvider';\nimport { withData } from '../helpers/restriction';\n\nconst currentAppLocale = AppLocale['en'];\n\nclass HotelCustomApp extends App {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentSelectedTheme: 'defaultTheme',\n      currentSelectedLanguage: currentAppLocale,\n    };\n  }\n\n  static async getInitialProps({ Component, ctx }) {\n    let pageProps = {};\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n    const { query, pathname } = ctx;\n\n    const { user, isLoggedIn } = withData(ctx);\n    return { pageProps, query, pathname, user, isLoggedIn };\n  }\n  handleOnChangeTheme = themeName => {\n    this.setState({\n      currentSelectedTheme: themeName,\n    });\n  };\n\n  handleOnChangeLanguage = language => {\n    const selectedLanguage = AppLocale[language.locale];\n    this.setState({\n      currentSelectedLanguage: selectedLanguage,\n    });\n  };\n  render() {\n    const { Component, pageProps, query, user, isLoggedIn } = this.props;\n    const { currentSelectedTheme, currentSelectedLanguage } = this.state;\n\n    return (\n      <AuthProvider>\n        <SearchProvider query={query}>\n          <Layout user={user} isLoggedIn={isLoggedIn}>\n            <ConfigProvider locale={currentSelectedLanguage.antd}>\n              <IntlProvider\n                locale={currentSelectedLanguage.locale}\n                messages={currentSelectedLanguage.messages}\n              >\n                <ThemeProvider theme={themes[currentSelectedTheme]}>\n                  <>\n                    <GlobalStyles />\n                    <Component isLoggedIn={isLoggedIn} {...pageProps} />\n                  </>\n                </ThemeProvider>\n              </IntlProvider>\n            </ConfigProvider>\n          </Layout>\n        </SearchProvider>\n      </AuthProvider>\n    );\n  }\n}\n\nexport default HotelCustomApp;\n"]},"metadata":{},"sourceType":"module"}