{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tiago\\\\Downloads\\\\templates_teste\\\\isoadmin-330\\\\Isomorphic - React Redux Admin Dashboard\\\\isomorphic\\\\node_modules\\\\@hotel\\\\components\\\\Map\\\\MapLocationBox.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Card from '@iso/ui/Antd/Card/Card';\nexport var MapDataHelper = function MapDataHelper(infoValue) {\n  var tempMapObj = {};\n  var tempMapArray = [];\n\n  if (infoValue && infoValue.length !== 0) {\n    infoValue.map(function (_ref) {\n      var place_id = _ref.place_id,\n          address_components = _ref.address_components,\n          formatted_address = _ref.formatted_address,\n          location = _ref.geometry.location;\n      var id = '';\n      var lat = '';\n      var lng = '';\n      var formattedAddress = '';\n      var city = '';\n      var state_long = '';\n      var state_short = '';\n      var zipcode = '';\n      var country_long = '';\n      var country_short = '';\n      id = place_id;\n      lat = location.lat();\n      lng = location.lng();\n      formattedAddress = formatted_address;\n\n      if (address_components) {\n        for (var i = 0; i < address_components.length; i++) {\n          if (address_components[i].types.length) {\n            switch (address_components[i].types[0]) {\n              case 'locality':\n                city = address_components[i].long_name;\n                break;\n\n              case 'administrative_area_level_1':\n                state_long = address_components[i].long_name;\n                state_short = address_components[i].short_name;\n                break;\n\n              case 'country':\n                country_long = address_components[i].long_name;\n                country_short = address_components[i].short_name;\n                break;\n\n              case 'postal_code':\n                zipcode = address_components[i].long_name;\n                break;\n\n              default:\n                break;\n            }\n          }\n        }\n      }\n\n      tempMapObj.id = place_id;\n      tempMapObj.lat = lat;\n      tempMapObj.lng = lng;\n      tempMapObj.formattedAddress = formattedAddress;\n      tempMapObj.city = city;\n      tempMapObj.state_short = state_short;\n      tempMapObj.state_long = state_long;\n      tempMapObj.zipcode = zipcode;\n      tempMapObj.country_short = country_short;\n      tempMapObj.country_long = country_long;\n      tempMapArray.push(tempMapObj);\n    });\n  }\n\n  return tempMapArray;\n};\n\nvar MapLocationBox = function MapLocationBox(props) {\n  var infoValue = props.infoValue;\n  var tempMapArray = MapDataHelper(infoValue);\n  return __jsx(\"div\", {\n    className: \"hotel-form-location\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, tempMapArray && tempMapArray.length !== 0 && tempMapArray.map(function (single, id) {\n    return __jsx(\"div\", {\n      key: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, __jsx(Card, {\n      title: \"Hotel Location\",\n      bordered: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Formatted Address :\"), __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, single && single.formattedAddress)), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"ZipCode :\"), __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, single && single.zipcode)), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"City :\"), __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, single && single.city)), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"State Long :\"), __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, single && single.state_long)), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"State Short:\"), __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, single && single.state_short)), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Country Long :\"), __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, single && single.country_long)), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Country Short:\"), __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, single && single.country_short)), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Lattitude :\"), __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, single && single.lat)), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Longitude :\"), __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, single && single.lng))));\n  }));\n};\n\nexport default MapLocationBox;","map":{"version":3,"sources":["C:/Users/tiago/Downloads/templates_teste/isoadmin-330/Isomorphic - React Redux Admin Dashboard/isomorphic/node_modules/@hotel/components/Map/MapLocationBox.js"],"names":["React","Card","MapDataHelper","infoValue","tempMapObj","tempMapArray","length","map","place_id","address_components","formatted_address","location","geometry","id","lat","lng","formattedAddress","city","state_long","state_short","zipcode","country_long","country_short","i","types","long_name","short_name","push","MapLocationBox","props","single"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Card from '@iso/ui/Antd/Card/Card';\n\nexport const MapDataHelper = infoValue => {\n  const tempMapObj = {};\n  const tempMapArray = [];\n\n  if (infoValue && infoValue.length !== 0) {\n    infoValue.map(\n      ({\n        place_id,\n        address_components,\n        formatted_address,\n        geometry: { location },\n      }) => {\n        let id = '';\n        let lat = '';\n        let lng = '';\n        let formattedAddress = '';\n        let city = '';\n        let state_long = '';\n        let state_short = '';\n        let zipcode = '';\n        let country_long = '';\n        let country_short = '';\n\n        id = place_id;\n        lat = location.lat();\n        lng = location.lng();\n        formattedAddress = formatted_address;\n        if (address_components) {\n          for (let i = 0; i < address_components.length; i++) {\n            if (address_components[i].types.length) {\n              switch (address_components[i].types[0]) {\n                case 'locality':\n                  city = address_components[i].long_name;\n                  break;\n                case 'administrative_area_level_1':\n                  state_long = address_components[i].long_name;\n                  state_short = address_components[i].short_name;\n                  break;\n                case 'country':\n                  country_long = address_components[i].long_name;\n                  country_short = address_components[i].short_name;\n                  break;\n                case 'postal_code':\n                  zipcode = address_components[i].long_name;\n                  break;\n                default:\n                  break;\n              }\n            }\n          }\n        }\n\n        tempMapObj.id = place_id;\n        tempMapObj.lat = lat;\n        tempMapObj.lng = lng;\n        tempMapObj.formattedAddress = formattedAddress;\n        tempMapObj.city = city;\n        tempMapObj.state_short = state_short;\n        tempMapObj.state_long = state_long;\n        tempMapObj.zipcode = zipcode;\n        tempMapObj.country_short = country_short;\n        tempMapObj.country_long = country_long;\n        tempMapArray.push(tempMapObj);\n      }\n    );\n  }\n\n  return tempMapArray;\n};\n\nconst MapLocationBox = props => {\n  const { infoValue } = props;\n  const tempMapArray = MapDataHelper(infoValue);\n\n  return (\n    <div className=\"hotel-form-location\">\n      {tempMapArray &&\n        tempMapArray.length !== 0 &&\n        tempMapArray.map((single, id) => {\n          return (\n            <div key={id}>\n              <Card title=\"Hotel Location\" bordered={false}>\n                <p>\n                  <strong>Formatted Address :</strong>\n                  <span>{single && single.formattedAddress}</span>\n                </p>\n                <p>\n                  <strong>ZipCode :</strong>\n                  <span>{single && single.zipcode}</span>\n                </p>\n                <p>\n                  <strong>City :</strong>\n                  <span>{single && single.city}</span>\n                </p>\n                <p>\n                  <strong>State Long :</strong>\n                  <span>{single && single.state_long}</span>\n                </p>\n                <p>\n                  <strong>State Short:</strong>\n                  <span>{single && single.state_short}</span>\n                </p>\n                <p>\n                  <strong>Country Long :</strong>\n                  <span>{single && single.country_long}</span>\n                </p>\n                <p>\n                  <strong>Country Short:</strong>\n                  <span>{single && single.country_short}</span>\n                </p>\n                <p>\n                  <strong>Lattitude :</strong>\n                  <span>{single && single.lat}</span>\n                </p>\n                <p>\n                  <strong>Longitude :</strong>\n                  <span>{single && single.lng}</span>\n                </p>\n              </Card>\n            </div>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default MapLocationBox;\n"]},"metadata":{},"sourceType":"module"}