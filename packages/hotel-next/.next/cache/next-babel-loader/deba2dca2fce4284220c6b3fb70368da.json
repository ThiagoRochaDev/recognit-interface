{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _parseFloat from \"@babel/runtime-corejs2/core-js/parse-float\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nvar _jsxFileName = \"C:\\\\Users\\\\tiago\\\\Downloads\\\\templates_teste\\\\isoadmin-330\\\\Isomorphic - React Redux Admin Dashboard\\\\isomorphic\\\\packages\\\\hotel-next\\\\container\\\\Layout\\\\Header\\\\NavbarSearch.js\";\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport Router, { withRouter } from 'next/router';\nimport isEmpty from 'lodash/isEmpty';\nimport { FaMapMarkerAlt } from 'react-icons/fa';\nimport MapAutoComplete from '@hotel/components/Map/MapAutoComplete';\nimport { MapDataHelper } from '@hotel/components/Map/MapLocationBox';\nimport { NavbarSearchWrapper } from './Header.style';\nimport { SearchContext } from '../../../context/SearchProvider';\nimport { setStateToUrl } from '../../../helpers/url_handler';\n\nconst NavbarSearch = () => {\n  const {\n    state,\n    dispatch\n  } = useContext(SearchContext);\n  const initialState = {\n    amenities: state.amenities || [],\n    property: state.property || [],\n    setStartDate: state.setStartDate || null,\n    setEndDate: state.setEndDate || null,\n    minPrice: _parseInt(state.minPrice) || 0,\n    maxPrice: _parseInt(state.maxPrice) || 100,\n    location_lat: state.location_lat || null,\n    location_lng: state.location_lng || null,\n    room: _parseInt(state.room) || 0,\n    guest: _parseInt(state.guest) || 0\n  }; //  Map Data processing Start\n\n  const updatevalueFunc = value => {\n    const {\n      searchedPlaceAPIData\n    } = value;\n    let tempLocation = [];\n    const mapData = !isEmpty(searchedPlaceAPIData) ? MapDataHelper(searchedPlaceAPIData) : [];\n\n    if (!isEmpty(mapData) && mapData.length !== 0) {\n      mapData.forEach(singleMapData => tempLocation.push({\n        location_lat: singleMapData ? singleMapData.lat.toFixed(3) : null,\n        location_lng: singleMapData ? singleMapData.lng.toFixed(3) : null\n      }));\n    } //  Map Data processing End\n\n\n    const searchLocation = tempLocation ? tempLocation[0] : {};\n\n    if (!isEmpty(searchLocation)) {\n      const query = {\n        location_lat: _parseFloat(searchLocation.location_lat),\n        location_lng: _parseFloat(searchLocation.location_lng)\n      };\n      const params = setStateToUrl(query); // *****  direct dispatch for url\n\n      dispatch({\n        type: 'UPDATE',\n        payload: _objectSpread({}, initialState, query)\n      });\n      Router.push({\n        pathname: '/listing',\n        query: params\n      });\n    }\n  };\n\n  return __jsx(NavbarSearchWrapper, {\n    className: \"navbar_search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, __jsx(FaMapMarkerAlt, {\n    className: \"map-marker\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), __jsx(MapAutoComplete, {\n    updatevalue: value => updatevalueFunc(value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), __jsx(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    version: \"1.1\",\n    x: \"0px\",\n    y: \"0px\",\n    width: \"30\",\n    height: \"30\",\n    viewBox: \"0 0 144.083 144\",\n    enableBackground: \"new 0 0 144.083 144\",\n    className: \"target\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, __jsx(\"path\", {\n    d: \"M117.292,69h-13.587C102.28,53.851,90.19,41.761,75.042,40.337V26.5h-6v13.837C53.893,41.761,41.802,53.851,40.378,69  H26.792v6h13.587c1.425,15.148,13.515,27.238,28.663,28.663V117.5h6v-13.837C90.19,102.238,102.28,90.148,103.705,75h13.587V69z   M72.042,97.809c-14.23,0-25.809-11.578-25.809-25.809c0-14.231,11.578-25.809,25.809-25.809S97.85,57.769,97.85,72  C97.85,86.23,86.272,97.809,72.042,97.809z\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), __jsx(\"path\", {\n    d: \"M72.042,52.541c-10.729,0-19.459,8.729-19.459,19.459s8.729,19.459,19.459,19.459S91.5,82.729,91.5,72  S82.771,52.541,72.042,52.541z M72.042,85.459c-7.421,0-13.459-6.037-13.459-13.459c0-7.421,6.038-13.459,13.459-13.459  S85.5,64.579,85.5,72C85.5,79.422,79.462,85.459,72.042,85.459z\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })));\n};\n\nexport default withRouter(NavbarSearch);","map":{"version":3,"sources":["C:/Users/tiago/Downloads/templates_teste/isoadmin-330/Isomorphic - React Redux Admin Dashboard/isomorphic/packages/hotel-next/container/Layout/Header/NavbarSearch.js"],"names":["React","useContext","Router","withRouter","isEmpty","FaMapMarkerAlt","MapAutoComplete","MapDataHelper","NavbarSearchWrapper","SearchContext","setStateToUrl","NavbarSearch","state","dispatch","initialState","amenities","property","setStartDate","setEndDate","minPrice","maxPrice","location_lat","location_lng","room","guest","updatevalueFunc","value","searchedPlaceAPIData","tempLocation","mapData","length","forEach","singleMapData","push","lat","toFixed","lng","searchLocation","query","params","type","payload","pathname"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport Router, { withRouter } from 'next/router';\nimport isEmpty from 'lodash/isEmpty';\nimport { FaMapMarkerAlt } from 'react-icons/fa';\nimport MapAutoComplete from '@hotel/components/Map/MapAutoComplete';\nimport { MapDataHelper } from '@hotel/components/Map/MapLocationBox';\nimport { NavbarSearchWrapper } from './Header.style';\nimport { SearchContext } from '../../../context/SearchProvider';\nimport { setStateToUrl } from '../../../helpers/url_handler';\n\nconst NavbarSearch = () => {\n  const { state, dispatch } = useContext(SearchContext);\n  const initialState = {\n    amenities: state.amenities || [],\n    property: state.property || [],\n    setStartDate: state.setStartDate || null,\n    setEndDate: state.setEndDate || null,\n    minPrice: parseInt(state.minPrice) || 0,\n    maxPrice: parseInt(state.maxPrice) || 100,\n    location_lat: state.location_lat || null,\n    location_lng: state.location_lng || null,\n    room: parseInt(state.room) || 0,\n    guest: parseInt(state.guest) || 0,\n  };\n\n  //  Map Data processing Start\n  const updatevalueFunc = value => {\n    const { searchedPlaceAPIData } = value;\n    let tempLocation = [];\n    const mapData = !isEmpty(searchedPlaceAPIData)\n      ? MapDataHelper(searchedPlaceAPIData)\n      : [];\n    if (!isEmpty(mapData) && mapData.length !== 0) {\n      mapData.forEach(singleMapData =>\n        tempLocation.push({\n          location_lat: singleMapData ? singleMapData.lat.toFixed(3) : null,\n          location_lng: singleMapData ? singleMapData.lng.toFixed(3) : null,\n        })\n      );\n    }\n    //  Map Data processing End\n\n    const searchLocation = tempLocation ? tempLocation[0] : {};\n    if (!isEmpty(searchLocation)) {\n      const query = {\n        location_lat: parseFloat(searchLocation.location_lat),\n        location_lng: parseFloat(searchLocation.location_lng),\n      };\n      const params = setStateToUrl(query);\n      // *****  direct dispatch for url\n      dispatch({\n        type: 'UPDATE',\n        payload: {\n          ...initialState,\n          ...query,\n        },\n      });\n      Router.push({\n        pathname: '/listing',\n        query: params,\n      });\n    }\n  };\n\n  return (\n    <NavbarSearchWrapper className=\"navbar_search\">\n      <FaMapMarkerAlt className=\"map-marker\" />\n      <MapAutoComplete updatevalue={value => updatevalueFunc(value)} />\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        version=\"1.1\"\n        x=\"0px\"\n        y=\"0px\"\n        width=\"30\"\n        height=\"30\"\n        viewBox=\"0 0 144.083 144\"\n        enableBackground=\"new 0 0 144.083 144\"\n        className=\"target\"\n      >\n        <path d=\"M117.292,69h-13.587C102.28,53.851,90.19,41.761,75.042,40.337V26.5h-6v13.837C53.893,41.761,41.802,53.851,40.378,69  H26.792v6h13.587c1.425,15.148,13.515,27.238,28.663,28.663V117.5h6v-13.837C90.19,102.238,102.28,90.148,103.705,75h13.587V69z   M72.042,97.809c-14.23,0-25.809-11.578-25.809-25.809c0-14.231,11.578-25.809,25.809-25.809S97.85,57.769,97.85,72  C97.85,86.23,86.272,97.809,72.042,97.809z\" />\n        <path d=\"M72.042,52.541c-10.729,0-19.459,8.729-19.459,19.459s8.729,19.459,19.459,19.459S91.5,82.729,91.5,72  S82.771,52.541,72.042,52.541z M72.042,85.459c-7.421,0-13.459-6.037-13.459-13.459c0-7.421,6.038-13.459,13.459-13.459  S85.5,64.579,85.5,72C85.5,79.422,79.462,85.459,72.042,85.459z\" />\n      </svg>\n    </NavbarSearchWrapper>\n  );\n};\n\nexport default withRouter(NavbarSearch);\n"]},"metadata":{},"sourceType":"module"}