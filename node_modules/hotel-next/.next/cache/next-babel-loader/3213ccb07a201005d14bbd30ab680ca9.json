{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\tiago\\\\Downloads\\\\templates_teste\\\\isoadmin-330\\\\Isomorphic - React Redux Admin Dashboard\\\\isomorphic\\\\packages\\\\hotel-next\\\\context\\\\SearchProvider.js\";\nvar __jsx = React.createElement;\nimport React, { useReducer } from 'react';\nexport const SearchContext = React.createContext();\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'UPDATE':\n      return _objectSpread({}, state, action.payload);\n\n    default:\n      return state;\n  }\n}\n\nexport const SearchProvider = ({\n  children,\n  query\n}) => {\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(reducer, query);\n  return __jsx(SearchContext.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, children);\n};","map":{"version":3,"sources":["C:/Users/tiago/Downloads/templates_teste/isoadmin-330/Isomorphic - React Redux Admin Dashboard/isomorphic/packages/hotel-next/context/SearchProvider.js"],"names":["React","useReducer","SearchContext","createContext","reducer","state","action","type","payload","SearchProvider","children","query","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,OAAO,MAAMC,aAAa,GAAGF,KAAK,CAACG,aAAN,EAAtB;;AAEP,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,QAAL;AACE,+BAAYF,KAAZ,EAAsBC,MAAM,CAACE,OAA7B;;AACF;AACE,aAAOH,KAAP;AAJJ;AAMD;;AAED,OAAO,MAAMI,cAAc,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAyB;AACrD,QAAM;AAAA,OAACN,KAAD;AAAA,OAAQO;AAAR,MAAoBX,UAAU,CAACG,OAAD,EAAUO,KAAV,CAApC;AACA,SACE,MAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAAEN,MAAAA,KAAF;AAASO,MAAAA;AAAT,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,QADH,CADF;AAKD,CAPM","sourcesContent":["import React, { useReducer } from 'react';\n\nexport const SearchContext = React.createContext();\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'UPDATE':\n      return { ...state, ...action.payload };\n    default:\n      return state;\n  }\n}\n\nexport const SearchProvider = ({ children, query }) => {\n  const [state, dispatch] = useReducer(reducer, query);\n  return (\n    <SearchContext.Provider value={{ state, dispatch }}>\n      {children}\n    </SearchContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}