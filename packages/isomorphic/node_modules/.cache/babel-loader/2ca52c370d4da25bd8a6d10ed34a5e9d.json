{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\tiago\\\\Desktop\\\\THg\\\\Projetos WEB\\\\Faceapp\\\\interface_facerecognition\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\Users\\\\tiago\\\\Desktop\\\\THg\\\\Projetos WEB\\\\Faceapp\\\\interface_facerecognition\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\tiago\\\\Desktop\\\\THg\\\\Projetos WEB\\\\Faceapp\\\\interface_facerecognition\\\\shared\\\\isomorphic\\\\containers\\\\FirebaseForm\\\\FirebaseForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Button from '@iso/components/uielements/button';\nimport Input from '@iso/components/uielements/input';\nimport Modal from '@iso/components/Feedback/Modal';\nimport notification from '@iso/components/Feedback/Notification';\nimport { signInWithEmail, signUpWithEmailAndPassword, resetPassword } from '@iso/lib/firebase/firebase.authentication.util';\nexport default function (props) {\n  const _React$useState = React.useState({\n    visible: false,\n    email: 'demo@gmail.com',\n    password: 'demodemo',\n    confirmLoading: false\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        state = _React$useState2[0],\n        setState = _React$useState2[1];\n\n  const handleChange = e => {\n    const _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n    setState(_objectSpread({}, state, {\n      [name]: value\n    }));\n  };\n\n  const showModal = () => {\n    setState(_objectSpread({}, state, {\n      visible: true\n    }));\n  };\n\n  const handleCancel = e => {\n    setState(_objectSpread({}, state, {\n      visible: false\n    }));\n  };\n\n  const handleLogin = async () => {\n    const email = state.email,\n          password = state.password;\n\n    if (!(email && password)) {\n      notification('error', 'Please fill in email. and password');\n      return;\n    }\n\n    setState(_objectSpread({}, state, {\n      confirmLoading: true\n    }));\n    let user;\n    let message;\n    let data;\n\n    if (props.signup) {\n      try {\n        await signUpWithEmailAndPassword(email, password).then(authUser => {\n          user = authUser.user;\n          console.log(user, 'User');\n        });\n      } catch (error) {\n        message = error.message;\n        console.log(error.message, 'Error');\n      }\n    } else {\n      try {\n        await signInWithEmail(email, password).then(authUser => {\n          user = authUser.user;\n        });\n      } catch (error) {\n        message = error.message;\n        console.log(error.message, 'Error');\n      }\n    }\n\n    if (user) {\n      const token = await user.getIdToken();\n      props.login(token);\n      props.history.push('/dashboard');\n    } else {\n      notification('error', message);\n      setState(_objectSpread({}, state, {\n        confirmLoading: false\n      }));\n    }\n  };\n\n  const handleResetPassword = () => {\n    const email = state.email;\n\n    if (!email) {\n      notification('error', \"Please fill in email.\");\n      return;\n    }\n\n    resetPassword(email).then(() => notification('success', \"Password reset email sent to \".concat(email, \".\"))).catch(error => notification('error', 'Email address not found.'));\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Button, {\n    type: \"primary\",\n    onClick: showModal,\n    className: \"btnFirebase\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, props.signup ? 'Sign up with Firebase' : 'Sign in with Firebase'), React.createElement(Modal, {\n    title: props.signup ? 'Sign up with Firebase' : 'Sign in with Firebase',\n    visible: state.visible,\n    confirmLoading: state.confirmLoading,\n    onCancel: handleCancel,\n    onOk: handleLogin,\n    className: \"isoFirebaseLoginModal\",\n    cancelText: \"Cancel\",\n    okText: props.signup ? 'Sign Up' : 'Login',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"isoInputWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Email\"), React.createElement(Input, {\n    name: \"email\",\n    size: \"large\",\n    placeholder: \"Email\",\n    value: state.email,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"isoInputWrapper\",\n    style: {\n      marginBottom: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"Password\"), React.createElement(Input, {\n    name: \"password\",\n    type: \"password\",\n    size: \"large\",\n    placeholder: \"Password\",\n    value: state.password,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  })), React.createElement(\"span\", {\n    className: \"isoResetPass\",\n    onClick: handleResetPassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Reset Password\"))));\n}","map":{"version":3,"sources":["C:/Users/tiago/Desktop/THg/Projetos WEB/Faceapp/interface_facerecognition/shared/isomorphic/containers/FirebaseForm/FirebaseForm.js"],"names":["React","Button","Input","Modal","notification","signInWithEmail","signUpWithEmailAndPassword","resetPassword","props","useState","visible","email","password","confirmLoading","state","setState","handleChange","e","target","name","value","showModal","handleCancel","handleLogin","user","message","data","signup","then","authUser","console","log","error","token","getIdToken","login","history","push","handleResetPassword","catch","marginBottom"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Button from '@iso/components/uielements/button';\nimport Input from '@iso/components/uielements/input';\nimport Modal from '@iso/components/Feedback/Modal';\nimport notification from '@iso/components/Feedback/Notification';\nimport {\n  signInWithEmail,\n  signUpWithEmailAndPassword,\n  resetPassword,\n} from '@iso/lib/firebase/firebase.authentication.util';\n\nexport default function(props) {\n  const [state, setState] = React.useState({\n    visible: false,\n    email: 'demo@gmail.com',\n    password: 'demodemo',\n    confirmLoading: false,\n  });\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setState({\n      ...state,\n      [name]: value,\n    });\n  };\n  const showModal = () => {\n    setState({\n      ...state,\n      visible: true,\n    });\n  };\n  const handleCancel = e => {\n    setState({\n      ...state,\n      visible: false,\n    });\n  };\n  const handleLogin = async () => {\n    const { email, password } = state;\n    if (!(email && password)) {\n      notification('error', 'Please fill in email. and password');\n      return;\n    }\n    setState({\n      ...state,\n      confirmLoading: true,\n    });\n    let user;\n    let message;\n    let data;\n    if (props.signup) {\n      try {\n        await signUpWithEmailAndPassword(email, password).then(authUser => {\n          user = authUser.user;\n          console.log(user, 'User');\n        });\n      } catch (error) {\n        message = error.message;\n        console.log(error.message, 'Error');\n      }\n    } else {\n      try {\n        await signInWithEmail(email, password).then(authUser => {\n          user = authUser.user;\n        });\n      } catch (error) {\n        message = error.message;\n        console.log(error.message, 'Error');\n      }\n    }\n    if (user) {\n      const token = await user.getIdToken();\n      props.login(token);\n      props.history.push('/dashboard');\n    } else {\n      notification('error', message);\n      setState({\n        ...state,\n        confirmLoading: false,\n      });\n    }\n  };\n  const handleResetPassword = () => {\n    const { email } = state;\n    if (!email) {\n      notification('error', `Please fill in email.`);\n      return;\n    }\n    resetPassword(email)\n      .then(() =>\n        notification('success', `Password reset email sent to ${email}.`)\n      )\n      .catch(error => notification('error', 'Email address not found.'));\n  };\n  return (\n    <>\n      <Button type=\"primary\" onClick={showModal} className=\"btnFirebase\">\n        {props.signup ? 'Sign up with Firebase' : 'Sign in with Firebase'}\n      </Button>\n      <Modal\n        title={props.signup ? 'Sign up with Firebase' : 'Sign in with Firebase'}\n        visible={state.visible}\n        confirmLoading={state.confirmLoading}\n        onCancel={handleCancel}\n        onOk={handleLogin}\n        className=\"isoFirebaseLoginModal\"\n        cancelText=\"Cancel\"\n        okText={props.signup ? 'Sign Up' : 'Login'}\n      >\n        <form>\n          <div className=\"isoInputWrapper\">\n            <label>Email</label>\n            <Input\n              name=\"email\"\n              size=\"large\"\n              placeholder=\"Email\"\n              value={state.email}\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"isoInputWrapper\" style={{ marginBottom: 10 }}>\n            <label>Password</label>\n            <Input\n              name=\"password\"\n              type=\"password\"\n              size=\"large\"\n              placeholder=\"Password\"\n              value={state.password}\n              onChange={handleChange}\n            />\n          </div>\n          <span className=\"isoResetPass\" onClick={handleResetPassword}>\n            Reset Password\n          </span>\n        </form>\n      </Modal>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}