{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\tiago\\\\Desktop\\\\THg\\\\Projetos WEB\\\\Faceapp\\\\interface_facerecognition\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\tiago\\\\Desktop\\\\THg\\\\Projetos WEB\\\\Faceapp\\\\interface_facerecognition\\\\shared\\\\isomorphic\\\\containers\\\\Profile\\\\Profile.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport Spin from '@iso/ui/Antd/Spin/Spin';\nimport Modal from '@iso/ui/Antd/Modal/Modal';\nimport Container from '@iso/ui/UI/Container/Container';\nimport AvatarCard from '@iso/components/AvatarCard/AvatarCard';\nimport Posts from './Posts/Posts';\nimport Followers from './Followers/Followers';\nimport Following from './Following/Following';\nimport Wrapper, { Banner, Navigation, ContentWrapper } from './Profile.styles';\nimport { useSelector, useDispatch } from 'react-redux';\nimport profileActions from '@iso/redux/profile/actions';\nimport axios from 'axios';\nimport '@uppy/core/dist/style.css';\nimport '@uppy/dashboard/dist/style.css';\nimport Uppy from '@uppy/core';\nimport Tus from '@uppy/tus';\nimport GoogleDrive from '@uppy/google-drive';\nimport Dropbox from '@uppy/dropbox';\nimport Instagram from '@uppy/instagram';\nimport { Dashboard } from '@uppy/react';\nimport AwsS3 from '@uppy/aws-s3';\n\nconst MyProfile = () => {\n  const data = useSelector(state => state.profile.data);\n  const loading = useSelector(state => state.profile.loading);\n  const dispatch = useDispatch();\n  const getProfile = useCallback(() => dispatch(profileActions.fetchProfileDataStart()), [dispatch]); // const postImage = () => {\n  //     var albumBucketName = \"BUCKET_NAME\";\n  //     var bucketRegion = \"REGION\";\n  //     AWS.config.update({\n  //       region: bucketRegion,\n  //       credentials: new AWS.Credentials({\n  //         accessKeyId: 'akid', secretAccessKey: 'secret',\n  //       })\n  //     });\n  //     var upload = new AWS.S3.ManagedUpload({\n  //       params: {\n  //         Bucket: albumBucketName,\n  //         Key: photoKey,\n  //         Body: file\n  //       }\n  //     });\n  //     var promise = upload.promise();\n  //     promise.then(\n  //       function(data) {\n  //         alert(\"Successfully uploaded photo.\");\n  //         viewAlbum(albumName);\n  //       },\n  //       function(err) {\n  //         return alert(\"There was an error uploading your photo: \", err.message);\n  //       }\n  //     );\n  //   }\n\n  const uppy = Uppy({\n    debug: true,\n    autoProceed: false,\n    restrictions: {\n      maxFileSize: 100000000000,\n      maxNumberOfFiles: 10,\n      minNumberOfFiles: 1,\n      allowedFileTypes: ['image/*', 'video/*']\n    }\n  });\n  uppy.use(AwsS3, {\n    // use the AwsS3 plugin                                  \n    fields: [],\n\n    // empty array \n    getUploadParameters(file) {\n      // here we prepare our request to the server for the upload URL\n      return fetch('https://04ie6y9uhl.execute-api.us-east-1.amazonaws.com/dev/client_upload', {\n        // we'll send the info asynchronously via fetch to our nodejs server endpoint, '/uploader' in this case\n        method: 'POST',\n        mode: 'no-cors',\n        // all the examples I found via the Uppy site used 'PUT' and did not work\n        headers: {\n          accept: 'application/json',\n          'content-type': 'application/json' // examples I found via the Uppy site used 'content-type': 'application/json' and did not work\n\n        },\n        body: JSON.stringify({\n          filename: file.name,\n          // here we are passing data to the server/back end\n          contentType: file.type,\n          metadata: {\n            'name': file.meta['name'],\n            // here we pass the 'name' variable to the back end, with 'file.meta['name']' referring to the 'name' from our metaFields id above\n            'caption': file.meta['caption'] // here we pass the 'caption' variable to the back end, with 'file.meta['caption']' referring to the 'caption' from our metaFields id above\n\n          }\n        })\n      }).then(response => {\n        return response.json(); // return the server's response as a JSON promise\n      }).then(data => {\n        console.log('>>>', data); // here you can have a look at the data the server sent back - get rid of this for production!\n\n        return {\n          method: data.method,\n          // here we send method, url, fields and headers to the AWS S3 bucket\n          url: data.url,\n          fields: data.fields,\n          headers: data.headers\n        };\n      });\n    }\n\n  });\n  uppy.on('complete', result => {\n    console.log('successful files:', result.successful);\n    console.log('failed files:', result.failed);\n  });\n\n  const _useState = useState('post'),\n        _useState2 = _slicedToArray(_useState, 2),\n        active = _useState2[0],\n        setActive = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        visible = _useState4[0],\n        setVisible = _useState4[1];\n\n  useEffect(() => {\n    getProfile();\n  }, [getProfile]);\n\n  const handleMenu = type => {\n    if (type === 'post') {\n      setActive(type);\n    }\n\n    if (type === 'upload_picture') {\n      setActive(type);\n      setVisible(true);\n    }\n\n    if (type === 'following') {\n      setActive(type);\n      setVisible(true);\n    }\n  };\n\n  const handleCancel = () => {\n    setVisible(false);\n    setActive('post');\n  };\n\n  return React.createElement(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, loading !== true ? React.createElement(React.Fragment, null, React.createElement(Banner, {\n    className: \"profile-banner\",\n    style: {\n      backgroundImage: \"url(\".concat(data.profile_bg, \")\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(Container, {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(AvatarCard, {\n    avatar: data.avatar,\n    name: data.name,\n    username: data.username,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }))), React.createElement(Navigation, {\n    className: \"navigation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(Container, {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: active === 'post' ? 'active' : '',\n    onClick: () => handleMenu('post'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, data.post.length), \" Gallery\"), React.createElement(\"li\", {\n    className: active === 'upload_picture' ? 'active' : '',\n    onClick: () => handleMenu('upload_picture'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    type: \"button\",\n    class: \"ant-btn ant-btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, \" Upload Pictures\")), React.createElement(\"li\", {\n    className: active === 'following' ? 'active' : '',\n    onClick: () => handleMenu('following'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, data.following.length), \" Client List\")))), React.createElement(ContentWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, React.createElement(Container, {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, React.createElement(Posts, {\n    avatar: data.avatar,\n    username: data.username,\n    data: data.post,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }), React.createElement(Modal, {\n    wrapClassName: \"follow-modal\",\n    visible: visible,\n    onCancel: handleCancel,\n    footer: null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, active === 'upload_picture' && React.createElement(Dashboard, {\n    plugins: ['GoogleDrive', 'Dropbox', 'Instagram'],\n    uppy: uppy,\n    inline: true,\n    target: \".DashboardContainer\",\n    replaceTargetContent: true,\n    showProgressDetails: true,\n    note: \"\",\n    height: 470,\n    width: \"100%\",\n    metaFields: [{\n      id: 'name',\n      name: 'Name',\n      placeholder: 'file name'\n    }, {\n      id: 'caption',\n      name: 'Caption',\n      placeholder: 'describe what the image is about'\n    }],\n    browserBackButtonClose: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }), active === 'following' && React.createElement(Following, {\n    data: data.following,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }))))) : React.createElement(\"div\", {\n    style: {\n      minHeight: '150px',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, React.createElement(Spin, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  })));\n};\n\nexport default MyProfile;","map":{"version":3,"sources":["C:/Users/tiago/Desktop/THg/Projetos WEB/Faceapp/interface_facerecognition/shared/isomorphic/containers/Profile/Profile.js"],"names":["React","useState","useEffect","useCallback","Spin","Modal","Container","AvatarCard","Posts","Followers","Following","Wrapper","Banner","Navigation","ContentWrapper","useSelector","useDispatch","profileActions","axios","Uppy","Tus","GoogleDrive","Dropbox","Instagram","Dashboard","AwsS3","MyProfile","data","state","profile","loading","dispatch","getProfile","fetchProfileDataStart","uppy","debug","autoProceed","restrictions","maxFileSize","maxNumberOfFiles","minNumberOfFiles","allowedFileTypes","use","fields","getUploadParameters","file","fetch","method","mode","headers","accept","body","JSON","stringify","filename","name","contentType","type","metadata","meta","then","response","json","console","log","url","on","result","successful","failed","active","setActive","visible","setVisible","handleMenu","handleCancel","backgroundImage","profile_bg","avatar","username","post","length","following","id","placeholder","minHeight","display","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport Spin from '@iso/ui/Antd/Spin/Spin';\nimport Modal from '@iso/ui/Antd/Modal/Modal';\nimport Container from '@iso/ui/UI/Container/Container';\nimport AvatarCard from '@iso/components/AvatarCard/AvatarCard';\nimport Posts from './Posts/Posts';\nimport Followers from './Followers/Followers';\nimport Following from './Following/Following';\nimport Wrapper, { Banner, Navigation, ContentWrapper } from './Profile.styles';\nimport { useSelector, useDispatch } from 'react-redux';\nimport profileActions from '@iso/redux/profile/actions';\nimport axios from 'axios';\nimport '@uppy/core/dist/style.css';\nimport '@uppy/dashboard/dist/style.css';\nimport Uppy from '@uppy/core';\nimport Tus from '@uppy/tus';\nimport GoogleDrive from '@uppy/google-drive';\nimport Dropbox from '@uppy/dropbox';\nimport Instagram from '@uppy/instagram';\nimport { Dashboard } from '@uppy/react';\nimport AwsS3 from '@uppy/aws-s3'\n\n\nconst MyProfile = () => {\n  \n  const data = useSelector(state => state.profile.data);\n  const loading = useSelector(state => state.profile.loading);\n  const dispatch = useDispatch();\n  const getProfile = useCallback(\n    () => dispatch(profileActions.fetchProfileDataStart()),\n    [dispatch]\n  );\n\n  // const postImage = () => {\n  //     var albumBucketName = \"BUCKET_NAME\";\n  //     var bucketRegion = \"REGION\";\n\n  //     AWS.config.update({\n  //       region: bucketRegion,\n  //       credentials: new AWS.Credentials({\n  //         accessKeyId: 'akid', secretAccessKey: 'secret',\n  //       })\n  //     });\n\n  //     var upload = new AWS.S3.ManagedUpload({\n  //       params: {\n  //         Bucket: albumBucketName,\n  //         Key: photoKey,\n  //         Body: file\n  //       }\n  //     });\n\n  //     var promise = upload.promise();\n\n  //     promise.then(\n  //       function(data) {\n  //         alert(\"Successfully uploaded photo.\");\n  //         viewAlbum(albumName);\n  //       },\n  //       function(err) {\n  //         return alert(\"There was an error uploading your photo: \", err.message);\n  //       }\n  //     );\n  //   }\n\n  \n\n    \n  const uppy = Uppy({\n    debug: true,\n    autoProceed: false,\n    restrictions: {\n      maxFileSize: 100000000000,\n      maxNumberOfFiles: 10,\n      minNumberOfFiles: 1,\n      allowedFileTypes: ['image/*', 'video/*'],\n    },\n  });\n    \n    uppy.use(AwsS3, { // use the AwsS3 plugin                                  \n      fields: [ ], // empty array \n      getUploadParameters(file){ // here we prepare our request to the server for the upload URL\n         return fetch('https://04ie6y9uhl.execute-api.us-east-1.amazonaws.com/dev/client_upload', { // we'll send the info asynchronously via fetch to our nodejs server endpoint, '/uploader' in this case\n            method: 'POST',\n            mode: 'no-cors', // all the examples I found via the Uppy site used 'PUT' and did not work\n            headers: {\n              accept: 'application/json',\n              'content-type': 'application/json', // examples I found via the Uppy site used 'content-type': 'application/json' and did not work\n            },\n            body: JSON.stringify({\n                 filename: file.name, // here we are passing data to the server/back end\n                 contentType: file.type,\n                 metadata: {\n                     'name': file.meta['name'], // here we pass the 'name' variable to the back end, with 'file.meta['name']' referring to the 'name' from our metaFields id above\n                     'caption': file.meta['caption'] // here we pass the 'caption' variable to the back end, with 'file.meta['caption']' referring to the 'caption' from our metaFields id above\n                  },\n            })\n         }).then((response) => {\n             return response.json(); // return the server's response as a JSON promise\n         }).then((data) => {\n             console.log('>>>', data); // here you can have a look at the data the server sent back - get rid of this for production!\n             return {\n                method: data.method, // here we send method, url, fields and headers to the AWS S3 bucket\n                url: data.url,\n                fields: data.fields,\n                headers: data.headers,\n             };\n         });\n       },\n    })\n    uppy.on('complete', result => {\n      \n      console.log('successful files:', result.successful);\n      console.log('failed files:', result.failed);\n    });\n\n  const [active, setActive] = useState('post');\n  const [visible, setVisible] = useState(false);\n\n  useEffect(() => {\n    getProfile();\n  }, [getProfile]);\n\n  const handleMenu = type => {\n    if (type === 'post') {\n      setActive(type);\n    }\n    if (type === 'upload_picture') {\n      \n      setActive(type);\n      setVisible(true);\n    }\n    if (type === 'following') {\n      setActive(type);\n      setVisible(true);\n    }\n    \n  };\n\n  const handleCancel = () => {\n    setVisible(false);\n    setActive('post');\n  };\n\n  return (\n    <Wrapper>\n      {loading !== true ? (\n        <>\n          <Banner\n            className=\"profile-banner\"\n            style={{ backgroundImage: `url(${data.profile_bg})` }}\n          >\n            <Container className=\"container\">\n              <AvatarCard\n                avatar={data.avatar}\n                name={data.name}\n                username={data.username}\n              />\n            </Container>\n          </Banner>\n\n          <Navigation className=\"navigation\">\n            <Container className=\"container\">\n              <ul className=\"menu\">\n                <li\n                  className={active === 'post' ? 'active' : ''}\n                  onClick={() => handleMenu('post')}\n                >\n                  <strong>{data.post.length}</strong> Gallery\n                </li>\n                <li\n                  className={active === 'upload_picture' ? 'active' : ''}\n                  onClick={() => handleMenu('upload_picture')}\n                >\n                  <strong type=\"button\" class=\"ant-btn ant-btn-primary\"> Upload Pictures</strong>\n                </li>\n                <li\n                  className={active === 'following' ? 'active' : ''}\n                  onClick={() => handleMenu('following')}\n                >\n                  <strong>{data.following.length}</strong> Client List\n                </li>\n              </ul>\n            </Container>\n          </Navigation>\n\n          <ContentWrapper>\n            <Container className=\"container\">\n              <Posts\n                avatar={data.avatar}\n                username={data.username}\n                data={data.post}\n              />\n              <Modal\n                wrapClassName=\"follow-modal\"\n                visible={visible}\n                onCancel={handleCancel}\n                footer={null}\n              >\n                {active === 'upload_picture' && \n                <Dashboard\n                    plugins={['GoogleDrive', 'Dropbox', 'Instagram']}\n                    uppy={uppy}\n                    inline={true}\n                    target=\".DashboardContainer\"\n                    replaceTargetContent={true}\n                    showProgressDetails={true}\n                    note=\"\"\n                    height={470}\n                    width=\"100%\"\n                    metaFields={[\n                      { id: 'name', name: 'Name', placeholder: 'file name' },\n                      {\n                        id: 'caption',\n                        name: 'Caption',\n                        placeholder: 'describe what the image is about',\n                      },\n                    ]}\n                    browserBackButtonClose={true}\n                  />}\n                {active === 'following' && <Following data={data.following} />}\n              </Modal>\n            </Container>\n          </ContentWrapper>\n        </>\n      ) : (\n        <div\n          style={{\n            minHeight: '150px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <Spin />\n        </div>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default MyProfile;\n"]},"metadata":{},"sourceType":"module"}